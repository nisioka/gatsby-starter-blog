{"version":3,"file":"component---src-templates-blog-post-tsx-4a1ffea2c0dd1421d821.js","mappings":"4SA+MA,UA/IyBA,IAWI,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAV3BC,MAAM,QACJC,EACAC,eAAgBC,EAAE,WAClBC,EAAU,OACVC,EAAM,OACNC,EAAM,WACNC,EAAU,OACVC,GACD,SACDC,GACsBlB,EACtB,MAAM,aAAEmB,GAAiBC,EAAAA,EAEnBC,EAAO,CACXC,IAAIV,aAAE,EAAFA,EAAIU,MAAMP,aAAM,EAANA,EAAQO,IACtBC,OAAOX,aAAE,EAAFA,EAAIY,YAAYD,SAASR,aAAM,EAANA,EAAQQ,OACxCE,SAASb,aAAE,EAAFA,EAAIc,QAAQX,aAAM,EAANA,EAAQU,SAC7BE,SAASC,EAAAA,EAAAA,KAAehB,aAAE,EAAFA,EAAIe,WAAWZ,aAAM,EAANA,EAAQY,UAC/CE,MACEjB,aAAE,EAAFA,EAAIkB,OAAOD,KAAKE,QAAQ,MAAO,IAAIA,QAAQ,MAAO,MAClD,KAAMhB,aAAM,EAANA,EAAQc,MAChBG,MAAMpB,aAAE,EAAFA,EAAIY,YAAYQ,QAAQjB,aAAM,EAANA,EAAQiB,MACtCC,cAAcrB,aAAE,EAAFA,EAAIY,YAAYS,gBAAgBlB,aAAM,EAANA,EAAQmB,UACtDC,YAAavB,aAAE,EAAFA,EAAIY,YAAYW,YAC7BC,SAASrB,SAAqB,QAAfd,EAANc,EAAQsB,qBAAa,IAAApC,OAAf,EAANA,EAAuBqC,KAAKF,UAAW,GAChDG,aACExB,SAAqB,QAAfb,EAANa,EAAQsB,qBAAa,IAAAnC,OAAf,EAANA,EAAuBoC,KAAKC,eAC5BC,EAAAA,EAAAA,GAAyB,QAAjBrC,EAACO,EAAQ+B,MAAM,UAAE,IAAAtC,OAAA,EAAhBA,EAAkBmC,KAAKI,iBAClCC,UAAU/B,aAAE,EAAFA,EAAIY,YAAYmB,YAAY5B,SAAkB,QAAZX,EAANW,EAAQ6B,kBAAU,IAAAxC,GAAU,QAAVC,EAAlBD,EAAoByC,MAAM,UAAE,IAAAxC,OAAtB,EAANA,EAA8ByC,MACpEC,MAAMnC,aAAE,EAAFA,EAAIY,YAAYuB,QAAQhC,SAAY,QAANT,EAANS,EAAQgC,YAAI,IAAAzC,OAAN,EAANA,EAAcuC,MAAMG,KAAIC,GAAKA,EAAEH,SAEzDI,EAAW,CACf5B,IAAIT,aAAU,EAAVA,EAAYS,MAAMN,aAAU,EAAVA,EAAYM,IAClCC,OAAOV,aAAU,EAAVA,EAAYW,YAAYD,SAASP,aAAU,EAAVA,EAAYO,OACpDM,MACEhB,aAAU,EAAVA,EAAYiB,OAAOD,KAAKE,QAAQ,MAAO,IAAIA,QAAQ,MAAO,OAC1Df,aAAU,EAAVA,EAAYa,MACdc,UACE9B,aAAU,EAAVA,EAAYW,YAAYmB,YAAY3B,aAAU,EAAVA,EAAY4B,WAAWC,MAAM,GAAGC,OAElEK,EAAO,CACX7B,IAAIR,aAAM,EAANA,EAAQQ,MAAML,aAAM,EAANA,EAAQK,IAC1BC,OAAOT,aAAM,EAANA,EAAQU,YAAYD,SAASN,aAAM,EAANA,EAAQM,OAC5CM,MACEf,aAAM,EAANA,EAAQgB,OAAOD,KAAKE,QAAQ,MAAO,IAAIA,QAAQ,MAAO,OAAOd,aAAM,EAANA,EAAQY,MACvEc,UACE7B,aAAM,EAANA,EAAQU,YAAYmB,YAAY1B,SAAkB,QAAZV,EAANU,EAAQ2B,kBAAU,IAAArC,GAAU,QAAVC,EAAlBD,EAAoBsC,MAAM,UAAE,IAAArC,OAAtB,EAANA,EAA8BsC,OAGlE,OACEM,EAAAA,cAACC,EAAAA,EAAM,CAACnC,SAAUA,GAChBkC,EAAAA,cAACE,EAAO,CACNC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETL,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIM,SAAS,YAAYrC,EAAKE,OAC9B6B,EAAAA,cAAA,SACEA,EAAAA,cAAA,OAAKG,UAAU,QACbH,EAAAA,cAAA,aACEA,EAAAA,cAAA,YAAO/B,EAAKW,UAKpBoB,EAAAA,cAAA,OAAKG,UAAU,iBACbH,EAAAA,cAACO,EAAAA,EAAW,CAACC,MAAOvC,EAAKkB,YAAasB,IAAKxC,EAAKE,SAElD6B,EAAAA,cAACU,EAAE,KACDV,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,UACEA,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAI,cAAaC,EAAAA,EAAAA,IAAgB5C,EAAKsB,aACzCtB,EAAKsB,YAIZS,EAAAA,cAACU,EAAE,KACDV,EAAAA,cAAA,UAAI,MACH/B,EAAK0B,KAAKC,KAAI,CAACkB,EAAKC,IAEjBf,EAAAA,cAAA,MAAIgB,IAAK,MAAMD,KACbf,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAI,QAAQE,MAASA,OAMnCd,EAAAA,cAACiB,EAAS,KACRjB,EAAAA,cAAA,WAASM,SAAS,gBACfY,EAAAA,EAAAA,IAAMjD,EAAKI,QAAS,CAAEM,QAASwC,MAGpCnB,EAAAA,cAAA,YAEFA,EAAAA,cAACoB,EAAW,CAACjB,UAAU,iBACrBH,EAAAA,cAAA,MACEqB,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX1B,EAAAA,cAAA,UACGF,EAASrB,MACRuB,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAI,KAAIC,EAAAA,EAAAA,IAAgBf,EAASP,aAAaO,EAASrB,OACvDkD,IAAI,QACL,KACI7B,EAAS3B,QAIlB6B,EAAAA,cAAA,UACGD,EAAKtB,MACJuB,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAI,KAAIC,EAAAA,EAAAA,IAAgBd,EAAKR,aAAaQ,EAAKtB,OAC/CkD,IAAI,QAEH5B,EAAK5B,MAAM,SAOtB6B,EAAAA,cAAC4B,EAAAA,GAAM,CACL5D,OAAQ,CACN6D,IAAK,GAAG9D,EAAa+D,YAAWjB,EAAAA,EAAAA,IAAgBd,EAAKR,aACnDQ,EAAKtB,OAEPsD,WAAY,KAAIlB,EAAAA,EAAAA,IAAgBd,EAAKR,aAAaQ,EAAKtB,OACvDN,MAAOF,EAAKE,SAGhB6B,EAAAA,cAACgC,EAAAA,EAAW,CAACvD,KAAMR,EAAKQ,KAAMc,SAAUtB,EAAKsB,SAAUI,KAAM1B,EAAK0B,OAC3D,EAMN,MAyGMsC,EAAOC,IAGS,IAAAC,EAAA,IAF3B9E,MAAM,QAAEC,EAAO,eAAEC,EAAc,OAAEI,GAAQ,SACzCG,GACsBoE,EACtB,MAAMjE,GAAOmE,EAAAA,EAAAA,IAAU7E,EAAgBI,EAAQL,GAC/C,OACE0C,EAAAA,cAACqC,EAAAA,EAAG,CACFlE,MAAOF,EAAKE,MACZY,YAAad,EAAKM,QAClBT,SAAUA,EACVwE,UACErE,EAAKkB,YAA8C,QAAnCgD,EAAGlE,EAAKkB,YAAYoD,OAAOC,gBAAQ,IAAAL,OAAA,EAAhCA,EAAkCM,IAAM,KAE7DxE,KAAMA,GACN,EAIAkD,EAAejC,IACnB,IAAKA,EAAM,OAAOA,EAClB,GAAkB,QAAdA,EAAKQ,KAAgB,CACvB,MAAMgD,GAAMC,EAAAA,EAAAA,IAAWC,EAAQ1D,IAC/B,IAAI2D,EAAS,GACb,cAAeH,GACb,IAAK,SACHG,EAASH,EACT,MACF,IAAK,SACH,GAAII,MAAMC,QAAQL,GAAM,CAEPA,EACR9C,KAAIoD,IACLA,EAAIC,OAASD,EAAIC,MAAMC,WACzBL,GAAUG,EAAIC,MAAMC,SACtB,GAEJ,KAAO,CAEL,MAAMF,EAAMN,EACRM,EAAIC,OAASD,EAAIC,MAAMC,WACzBL,EAASG,EAAIC,MAAMC,SAEvB,EAIJ,OACEhE,EAAKgE,SAASC,OAAS,GACrBnD,EAAAA,cAACoD,EAAe,CAACC,SAAUC,EAAYpE,IAAQ2D,EAGrD,GAGIO,EAAkBG,IAAA,IAAC,SACvBF,EAAQ,SACRH,GAIDK,EAAA,OACCvD,EAAAA,cAACwD,EAAAA,EAAiB,CAChBnC,MAAOoC,EAAAA,GACPJ,SAAUA,EACVK,iBAAiB,GAEhBR,EACiB,EAGhBI,EAAepE,IAAc,IAAAyE,EAAAC,EACjC,OAAI1E,EAAK2E,QAAQC,OAAgC,kBAAvB5E,EAAK2E,QAAQC,MAC7B5E,EAAK2E,QAAQC,MAAiBnF,QAAQ,YAAa,IAClC,QAApBgF,EAAIzE,EAAKgE,SAAS,UAAE,IAAAS,GAAS,QAATC,EAAhBD,EAAkBE,eAAO,IAAAD,GAAzBA,EAA2BE,MAC5B5E,EAAKgE,SAAS,GAAGW,QAAQC,MAAiBnF,QAAQ,YAAa,IAElE,MAAM,EAGTiE,EAAW1D,GACXA,EAAKgE,SAASC,OAAS,GAA+B,SAA1BjE,EAAKgE,SAAS,GAAGxD,KACxCR,EAAKgE,SAAS,GAAGA,SAEjBhE,EAAKgE,SAIVhD,EAAU6D,EAAAA,GAAOC,OAAO;;;;;;;;;;;EAYxB/C,EAAY8C,EAAAA,GAAOE,GAAG;;;;EAKtB7C,EAAc2C,EAAAA,GAAOG,GAAG;;;;;;;;EASxBxD,EAAKqD,EAAAA,GAAOI,EAAE","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\nimport styled from \"styled-components\"\r\nimport { convertCategory, mergePost, removeHtmlTags } from \"../utilFunction\"\r\nimport RelatedList from \"../components/related-list\"\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\r\nimport parse, { domToReact } from \"html-react-parser\"\r\nimport { ghcolors } from \"react-syntax-highlighter/dist/cjs/styles/prism\"\r\nimport { Disqus } from \"gatsby-plugin-disqus\"\r\nimport config from \"../../gatsby-config\"\r\n\r\ntype BlogPostTemplateProps = {\r\n  data: {\r\n    allFile: AllFile\r\n    markdownRemark: MdPost\r\n    mdPrevious: {\r\n      id: string\r\n      fields: {\r\n        slug: string\r\n      }\r\n      frontmatter: {\r\n        title: string\r\n        category: string\r\n      }\r\n    }\r\n    mdNext: {\r\n      id: string\r\n      fields: {\r\n        slug: string\r\n      }\r\n      frontmatter: {\r\n        title: string\r\n        category: string\r\n      }\r\n    }\r\n    wpPost: WpPost\r\n    wpPrevious: {\r\n      id: string\r\n      title: string\r\n      slug: string\r\n      categories: {\r\n        nodes: {\r\n          name: string\r\n        }[]\r\n      }\r\n    }\r\n    wpNext: {\r\n      id: string\r\n      title: string\r\n      slug: string\r\n      categories: {\r\n        nodes: {\r\n          name: string\r\n        }[]\r\n      }\r\n    }\r\n  }\r\n  location: Location\r\n}\r\n\r\nconst BlogPostTemplate = ({\r\n  data: {\r\n    allFile,\r\n    markdownRemark: md,\r\n    mdPrevious,\r\n    mdNext,\r\n    wpPost,\r\n    wpPrevious,\r\n    wpNext,\r\n  },\r\n  location,\r\n}: BlogPostTemplateProps) => {\r\n  const { siteMetadata } = config as { siteMetadata: SiteMetadata }\r\n\r\n  const post = {\r\n    id: md?.id || wpPost?.id,\r\n    title: md?.frontmatter.title || wpPost?.title,\r\n    content: md?.html || wpPost?.content,\r\n    excerpt: removeHtmlTags(md?.excerpt || wpPost?.excerpt),\r\n    slug:\r\n      md?.fields.slug.replace(/^\\//, \"\").replace(/\\/$/, \"\") ||\r\n      \"/\" + wpPost?.slug,\r\n    date: md?.frontmatter.date || wpPost?.date,\r\n    dateModified: md?.frontmatter.dateModified || wpPost?.modified,\r\n    description: md?.frontmatter.description,\r\n    altText: wpPost?.featuredImage?.node.altText || \"\",\r\n    gatsbyImage:\r\n      wpPost?.featuredImage?.node.gatsbyImage ||\r\n      getImage(allFile.edges[0]?.node.childImageSharp),\r\n    category: md?.frontmatter.category || wpPost?.categories?.nodes[0]?.name,\r\n    tags: md?.frontmatter.tags || wpPost?.tags?.nodes.map(t => t.name),\r\n  }\r\n  const previous = {\r\n    id: mdPrevious?.id || wpPrevious?.id,\r\n    title: mdPrevious?.frontmatter.title || wpPrevious?.title,\r\n    slug:\r\n      mdPrevious?.fields.slug.replace(/^\\//, \"\").replace(/\\/$/, \"\") ||\r\n      wpPrevious?.slug,\r\n    category:\r\n      mdPrevious?.frontmatter.category || wpPrevious?.categories.nodes[0].name,\r\n  }\r\n  const next = {\r\n    id: mdNext?.id || wpNext?.id,\r\n    title: mdNext?.frontmatter.title || wpNext?.title,\r\n    slug:\r\n      mdNext?.fields.slug.replace(/^\\//, \"\").replace(/\\/$/, \"\") || wpNext?.slug,\r\n    category:\r\n      mdNext?.frontmatter.category || wpNext?.categories?.nodes[0]?.name,\r\n  }\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.title}</h1>\r\n          <p>\r\n            <div className=\"time\">\r\n              <small>\r\n                <time>{post.date}</time>\r\n              </small>\r\n            </div>\r\n          </p>\r\n        </header>\r\n        <div className=\"featuredImage\">\r\n          <GatsbyImage image={post.gatsbyImage} alt={post.title} />\r\n        </div>\r\n        <Dl>\r\n          <dt>カテゴリ</dt>\r\n          <dd>\r\n            <Link to={`/category/${convertCategory(post.category)}`}>\r\n              {post.category}\r\n            </Link>\r\n          </dd>\r\n        </Dl>\r\n        <Dl>\r\n          <dt>タグ</dt>\r\n          {post.tags.map((tag, index) => {\r\n            return (\r\n              <dd key={`tag${index}`}>\r\n                <Link to={`/tag/${tag}/`}>{tag}</Link>\r\n              </dd>\r\n            )\r\n          })}\r\n        </Dl>\r\n\r\n        <BlogEntry>\r\n          <section itemProp=\"articleBody\">\r\n            {parse(post.content, { replace: replaceCode })}\r\n          </section>\r\n        </BlogEntry>\r\n        <hr />\r\n      </Article>\r\n      <BlogPostNav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous.slug && (\r\n              <Link\r\n                to={`/${convertCategory(previous.category)}/${previous.slug}`}\r\n                rel=\"prev\"\r\n              >\r\n                ← {previous.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next.slug && (\r\n              <Link\r\n                to={`/${convertCategory(next.category)}/${next.slug}`}\r\n                rel=\"next\"\r\n              >\r\n                {next.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </BlogPostNav>\r\n\r\n      <Disqus\r\n        config={{\r\n          url: `${siteMetadata.siteUrl}/${convertCategory(next.category)}/${\r\n            next.slug\r\n          }`,\r\n          identifier: `/${convertCategory(next.category)}/${next.slug}`,\r\n          title: post.title,\r\n        }}\r\n      />\r\n      <RelatedList slug={post.slug} category={post.category} tags={post.tags} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n    $imagePath: String\r\n  ) {\r\n    allFile(\r\n      filter: {\r\n        relativePath: { eq: $imagePath }\r\n        sourceInstanceName: { eq: \"images\" }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          childImageSharp {\r\n            gatsbyImageData(\r\n              height: 320\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt\r\n      html\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        dateModified(formatString: \"YYYY/MM/DD\")\r\n        description\r\n        category\r\n        tags\r\n      }\r\n    }\r\n    mdPrevious: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        category\r\n      }\r\n    }\r\n    mdNext: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        category\r\n      }\r\n    }\r\n    wpPost(id: { eq: $id }) {\r\n      id\r\n      title\r\n      content\r\n      excerpt\r\n      slug\r\n      date(formatString: \"YYYY/MM/DD\")\r\n      modified(formatString: \"YYYY/MM/DD\")\r\n      featuredImage {\r\n        node {\r\n          altText\r\n          gatsbyImage(height: 320)\r\n        }\r\n      }\r\n      categories {\r\n        nodes {\r\n          name\r\n        }\r\n      }\r\n      tags {\r\n        nodes {\r\n          name\r\n        }\r\n      }\r\n    }\r\n    wpPrevious: wpPost(id: { eq: $previousPostId }) {\r\n      title\r\n      slug\r\n      categories {\r\n        nodes {\r\n          name\r\n        }\r\n      }\r\n    }\r\n    wpNext: wpPost(id: { eq: $nextPostId }) {\r\n      title\r\n      slug\r\n      categories {\r\n        nodes {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Head = ({\r\n  data: { allFile, markdownRemark, wpPost },\r\n  location,\r\n}: BlogPostTemplateProps) => {\r\n  const post = mergePost(markdownRemark, wpPost, allFile)\r\n  return (\r\n    <Seo\r\n      title={post.title}\r\n      description={post.excerpt}\r\n      location={location}\r\n      imagePath={\r\n        post.gatsbyImage ? post.gatsbyImage.images.fallback?.src : null\r\n      }\r\n      post={post}\r\n    />\r\n  )\r\n}\r\n\r\nconst replaceCode = (node: any) => {\r\n  if (!node) return node\r\n  if (node.name === \"pre\") {\r\n    const dom = domToReact(getCode(node))\r\n    let result = \"\"\r\n    switch (typeof dom) {\r\n      case \"string\":\r\n        result = dom as string\r\n        break\r\n      case \"object\":\r\n        if (Array.isArray(dom)) {\r\n          // React.JSX.Element[]\r\n          const elmArr = dom as React.JSX.Element[]\r\n          elmArr.map(elm => {\r\n            if (elm.props && elm.props.children) {\r\n              result += elm.props.children as string\r\n            }\r\n          })\r\n        } else {\r\n          // React.JSX.Element\r\n          const elm = dom as React.JSX.Element\r\n          if (elm.props && elm.props.children) {\r\n            result = elm.props.children as string\r\n          }\r\n        }\r\n        break\r\n    }\r\n\r\n    return (\r\n      node.children.length > 0 && (\r\n        <SyntaxHighlight language={getLanguage(node)}>{result}</SyntaxHighlight>\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nconst SyntaxHighlight = ({\r\n  language,\r\n  children,\r\n}: {\r\n  language: string\r\n  children: string\r\n}) => (\r\n  <SyntaxHighlighter\r\n    style={ghcolors}\r\n    language={language}\r\n    showLineNumbers={true}\r\n  >\r\n    {children}\r\n  </SyntaxHighlighter>\r\n)\r\n\r\nconst getLanguage = (node: any) => {\r\n  if (node.attribs.class && node.attribs.class !== \"wp-block-code\") {\r\n    return (node.attribs.class as string).replace(\"language-\", \"\")\r\n  } else if (node.children[0]?.attribs?.class) {\r\n    return (node.children[0].attribs.class as string).replace(\"language-\", \"\")\r\n  }\r\n  return \"java\" // default\r\n}\r\n\r\nconst getCode = (node: any) => {\r\n  if (node.children.length > 0 && node.children[0].name === \"code\") {\r\n    return node.children[0].children\r\n  } else {\r\n    return node.children\r\n  }\r\n}\r\n\r\nconst Article = styled.article`\r\n  margin: 0 auto;\r\n  background-color: #fff;\r\n\r\n  .time {\r\n    text-align: right;\r\n  }\r\n\r\n  .featuredImage {\r\n    text-align: center;\r\n  }\r\n`\r\nconst BlogEntry = styled.div`\r\n  margin: 15px 0 30px;\r\n  border-top: 1px solid #ccc;\r\n  border-bottom: 1px solid #ccc;\r\n`\r\nconst BlogPostNav = styled.nav`\r\n  margin: 0 auto;\r\n\r\n  ul {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    list-style: none;\r\n  }\r\n`\r\nconst Dl = styled.dl`\r\n  display: flex;\r\n  margin: 0;\r\n\r\n  dt {\r\n    width: 80px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  dd {\r\n    font-size: 14px;\r\n    margin-left: 0;\r\n    padding-left: 0;\r\n\r\n    & + dd {\r\n      margin-left: 15px;\r\n      margin-bottom: 5px;\r\n    }\r\n\r\n    a {\r\n      text-decoration: none;\r\n      border-radius: 3px;\r\n      color: #fff;\r\n      background: var(--orange);\r\n      padding: 2px 5px;\r\n\r\n      &:hover {\r\n        opacity: 0.5;\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["_ref","_wpPost$featuredImage","_wpPost$featuredImage2","_allFile$edges$","_wpPost$categories","_wpPost$categories$no","_wpPost$tags","_wpNext$categories","_wpNext$categories$no","data","allFile","markdownRemark","md","mdPrevious","mdNext","wpPost","wpPrevious","wpNext","location","siteMetadata","config","post","id","title","frontmatter","content","html","excerpt","removeHtmlTags","slug","fields","replace","date","dateModified","modified","description","altText","featuredImage","node","gatsbyImage","getImage","edges","childImageSharp","category","categories","nodes","name","tags","map","t","previous","next","React","Layout","Article","className","itemScope","itemType","itemProp","GatsbyImage","image","alt","Dl","Link","to","convertCategory","tag","index","key","BlogEntry","parse","replaceCode","BlogPostNav","style","display","flexWrap","justifyContent","listStyle","padding","rel","Disqus","url","siteUrl","identifier","RelatedList","Head","_ref2","_post$gatsbyImage$ima","mergePost","Seo","imagePath","images","fallback","src","dom","domToReact","getCode","result","Array","isArray","elm","props","children","length","SyntaxHighlight","language","getLanguage","_ref3","SyntaxHighlighter","ghcolors","showLineNumbers","_node$children$","_node$children$$attri","attribs","class","styled","article","div","nav","dl"],"sourceRoot":""}