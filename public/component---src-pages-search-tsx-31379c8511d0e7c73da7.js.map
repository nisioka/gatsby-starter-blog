{"version":3,"file":"component---src-pages-search-tsx-31379c8511d0e7c73da7.js","mappings":"oMAgHA,UAzGeA,IAA2D,IAAAC,EAAA,IAA1D,KAAEC,EAAI,SAAEC,GAA6CH,EACnE,MAAMI,GAAQC,EAAAA,EAAAA,IAAWH,EAAKI,kBAAmBJ,EAAKK,UAAWL,EAAKM,SACtE,SAASC,EAAcC,GACrB,OAAON,EAAMO,QAAOC,IAClB,IAAK,MAAMC,KAAQH,EAAY,KAAAI,EAC7B,KACGF,EAAKG,MAAMC,cAAcC,SAASJ,IAClB,QAAjBC,EAACF,EAAKM,mBAAW,IAAAJ,GAAhBA,EAAkBE,cAAcC,SAASJ,IAE1C,OAAO,CAEX,CACA,OAAO,CAAI,GAEf,CAEA,MAAMM,EAAYC,WAAuB,QAAbnB,EAAAE,EAASkB,YAAI,IAAApB,OAAA,EAAbA,EAAeqB,MAAM,OAAO,KAAM,IAAIN,eAC5D,EAACO,EAAK,EAAEC,IAAYC,EAAAA,EAAAA,UAAS,CACjCC,aAAcjB,EAAcU,EAAUG,MAAM,QAC5CK,MAAOR,KAEH,aAAEO,EAAY,MAAEC,GAAUJ,EA2BhC,OAzBAK,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAAS,IAAIC,gBACfH,EACFE,EAAOE,OAAO,IAAKJ,GAEnBE,EAAOG,OAAO,KAEhBC,OAAOC,QAAQC,aACb,GACA,GACAhC,EAASkB,KAAKC,MAAM,KAAK,IACtBO,EAAOO,KAAO,EAAI,IAAMP,EAAOQ,WAAa,IAChD,GACA,CAACd,EAAMI,QAYRW,EAAAA,cAACC,EAAAA,EAAM,CAACpC,SAAUA,GAChBmC,EAAAA,cAAA,SACEE,KAAK,OACL,aAAW,SACXC,YAAY,cACZC,SAfN,SAA2BC,GACzB,MAAMjC,EAAaiC,EAAMC,OAAOC,MAAM7B,cAAcM,MAAM,OAE1DE,EAAS,CACPE,aAAcjB,EAAcC,GAC5BiB,MAAOjB,EAAWoC,KAAK,MAE3B,EASMD,MAAOlB,IAETW,EAAAA,cAAA,OAAKS,UAAU,qBACF,KAAVpB,EACGA,EAAQ,WAAaD,EAAasB,OAAS,IAC3CtB,EAAasB,OAAS,aAE5BV,EAAAA,cAACW,EAAAA,GAAkB,KACjBX,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,SAAIZ,EAAasB,OAAO,YAE1BV,EAAAA,cAACY,EAAAA,GAA0B,KACxBxB,EAAayB,KAAIvC,GAEd0B,EAAAA,cAAA,MAAIc,IAAKxC,EAAKyC,MACZf,EAAAA,cAAA,WACES,UAAU,iBACVO,SAAS,6BAEThB,EAAAA,cAACiB,EAAAA,KAAI,CAACC,GAAI,KAAIC,EAAAA,EAAAA,IAAgB7C,EAAK8C,aAAa9C,EAAKyC,QACnDf,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAO1B,EAAKG,QAEduB,EAAAA,cAAA,eACEA,EAAAA,cAAA,WACEA,EAAAA,cAAA,aACEA,EAAAA,cAAA,YAAO1B,EAAK+C,QAGhBrB,EAAAA,cAAA,OAAKS,UAAU,kBACgB,IAArBnC,EAAKgD,aACXtB,EAAAA,cAACuB,EAAAA,EAAW,CACVC,IAAKlD,EAAKmD,QACVC,MAAOpD,EAAKgD,YACZb,UAAU,eAIhBT,EAAAA,cAAA,KAAG2B,wBAAyB,CAAEC,OAAQtD,EAAKuD,kBAQlD,C,8FC1GN,MAAMlB,EAAqBmB,EAAAA,GAAOC,MAAM;;;;;;;;;;;;;;EAgBlCnB,EAA6BkB,EAAAA,GAAOE,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAyDlBF,EAAAA,GAAOG,GAAG","sources":["webpack://gatsby-starter-blog/./src/pages/search.tsx","webpack://gatsby-starter-blog/./src/style.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport { convertCategory, mergePosts } from \"../utilFunction\"\r\nimport { ContentsListHeader, ContentsOrderedListWrapper } from \"../style\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\n\r\nconst Search = ({ data, location }: { data: any; location: Location }) => {\r\n  const posts = mergePosts(data.allMarkdownRemark, data.allWpPost, data.allFile)\r\n  function filterByQuery(queryWords: string[]) {\r\n    return posts.filter(post => {\r\n      for (const word of queryWords) {\r\n        if (\r\n          !post.title.toLowerCase().includes(word) &&\r\n          !post.description?.toLowerCase().includes(word)\r\n        ) {\r\n          return false\r\n        }\r\n      }\r\n      return true\r\n    })\r\n  }\r\n\r\n  const initQuery = decodeURI(location.href?.split(\"?q=\")[1] || \"\").toLowerCase()\r\n  const [state, setState] = useState({\r\n    filteredData: filterByQuery(initQuery.split(/\\s+/)),\r\n    query: initQuery,\r\n  })\r\n  const { filteredData, query } = state\r\n\r\n  useEffect(() => {\r\n    // ユーザーの入力があるたびにURLのクエリパラメータを更新\r\n    const params = new URLSearchParams()\r\n    if (query) {\r\n      params.append(\"q\", query)\r\n    } else {\r\n      params.delete(\"q\")\r\n    }\r\n    window.history.replaceState(\r\n      \"\",\r\n      \"\",\r\n      location.href.split(\"?\")[0] +\r\n        (params.size > 0 ? \"?\" + params.toString() : \"\")\r\n    )\r\n  }, [state.query])\r\n\r\n  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    const queryWords = event.target.value.toLowerCase().split(/\\s+/)\r\n\r\n    setState({\r\n      filteredData: filterByQuery(queryWords),\r\n      query: queryWords.join(\" \"),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <input\r\n        type=\"text\"\r\n        aria-label=\"Search\"\r\n        placeholder=\"検索ワードを入力...\"\r\n        onChange={handleInputChange}\r\n        value={query}\r\n      />\r\n      <div className=\"result-inner__res\">\r\n        {query !== \"\"\r\n          ? query + \" の検索結果: \" + filteredData.length + \"件\"\r\n          : filteredData.length + \"件の記事があります\"}\r\n      </div>\r\n      <ContentsListHeader>\r\n        <h1>サイト内検索</h1>\r\n        <p>{filteredData.length} 記事あります</p>\r\n      </ContentsListHeader>\r\n      <ContentsOrderedListWrapper>\r\n        {filteredData.map(post => {\r\n          return (\r\n            <li key={post.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <Link to={`/${convertCategory(post.category)}/${post.slug}`}>\r\n                  <h2>\r\n                    <span>{post.title}</span>\r\n                  </h2>\r\n                  <section>\r\n                    <div>\r\n                      <small>\r\n                        <time>{post.date}</time>\r\n                      </small>\r\n                    </div>\r\n                    <div className=\"thumbnail\">\r\n                      {typeof post.gatsbyImage === \"undefined\" || (\r\n                        <GatsbyImage\r\n                          alt={post.altText}\r\n                          image={post.gatsbyImage}\r\n                          className=\"thumbnail\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <p dangerouslySetInnerHTML={{ __html: post.excerpt }} />\r\n                  </section>\r\n                </Link>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ContentsOrderedListWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Search\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark {\r\n      nodes {\r\n        html\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"YYYY/MM/DD\")\r\n          description\r\n          featuredImagePath\r\n          category\r\n        }\r\n      }\r\n    }\r\n    allWpPost {\r\n      nodes {\r\n        title\r\n        content\r\n        slug\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        featuredImage {\r\n          node {\r\n            altText\r\n            gatsbyImage(\r\n              width: 100\r\n              height: 100\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n        categories {\r\n          nodes {\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\r\n      edges {\r\n        node {\r\n          relativePath\r\n          childImageSharp {\r\n            gatsbyImageData(\r\n              width: 100\r\n              height: 100\r\n              formats: [AUTO, WEBP, AVIF]\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import styled from \"styled-components\"\n\nexport const ContentsListHeader = styled.header`\n  text-align: center;\n\n  h1,\n  h2 {\n    &:after {\n      margin: 0 auto;\n      content: \"\";\n      display: block;\n      width: 98%;\n      height: 3px;\n      background: var(--orange);\n    }\n  }\n`\n\nexport const ContentsOrderedListWrapper = styled.ol`\n  column-count: 1;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  li {\n    padding: 5px;\n    margin: var(--spacing-1);\n    box-sizing: border-box;\n    border: 1px solid var(--black);\n    border-radius: 5px;\n    background-color: #fff;\n\n    a {\n      color: var(--black);\n      text-decoration: none;\n    }\n\n    h2 {\n      font-size: var(--fontSize-2);\n    }\n  }\n  .thumbnail {\n    float: left;\n  }\n\n  @media screen and (min-width: calc(512px + 160px)) {\n    column-count: 2;\n\n    li {\n      padding: 15px;\n      width: 48%;\n\n      h2 {\n        font-size: var(--fontSize-3);\n      }\n\n      a {\n        &:hover h2 {\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n  @media screen and (min-width: calc(768px + 330px)) {\n    column-count: 3;\n\n    li {\n      width: 32%;\n    }\n  }\n`\n\nexport const NormalAreaWrapper = styled.div`\n  background-color: #fff;\n`\n"],"names":["_ref","_location$href","data","location","posts","mergePosts","allMarkdownRemark","allWpPost","allFile","filterByQuery","queryWords","filter","post","word","_post$description","title","toLowerCase","includes","description","initQuery","decodeURI","href","split","state","setState","useState","filteredData","query","useEffect","params","URLSearchParams","append","delete","window","history","replaceState","size","toString","React","Layout","type","placeholder","onChange","event","target","value","join","className","length","ContentsListHeader","ContentsOrderedListWrapper","map","key","slug","itemType","Link","to","convertCategory","category","date","gatsbyImage","GatsbyImage","alt","altText","image","dangerouslySetInnerHTML","__html","excerpt","styled","header","ol","div"],"sourceRoot":""}